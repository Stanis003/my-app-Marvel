{"version":3,"sources":["components/errorMessage/error.gif","resources/img/mjolnir.png","resources/img/vision.png","components/appHeader/AppHeader.js","components/spinner/spinner.js","components/errorMessage/errorMessage.js","services/MarvelService.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/erroeBoundary/ErrorBoundary.js","components/app/App.js","index.js"],"names":["module","exports","AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","tabIndex","key","props","onCharSelected","onKeyPress","e","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","decoration","ErrorBoundary","errorinfo","console","log","children","App","selectedChar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.376a1135.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.6617f447.gif\";","module.exports = __webpack_public_path__ + \"static/media/mjolnir.dd8446a3.png\";","module.exports = __webpack_public_path__ + \"static/media/vision.76e8b3e1.png\";","import React from \"react\";\r\nimport './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <a href=\"#\">\r\n                    <span>Marvel</span> information portal\r\n                </a>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><a href=\"#\">Characters</a></li>\r\n                    /\r\n                    <li><a href=\"#\">Comics</a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default AppHeader;","import React from \"react\";\r\nconst Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport img from './error.gif'\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\nexport default ErrorMessage;","\r\nclass MarvelService {\r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=a373e146fd59f5a1eac1e30c998c5dff';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,210)}...`:'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + `.` + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\nexport default MarvelService;","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport MarvelService from \"../../services/MarvelService\";\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nclass RandomChar extends Component {\r\n\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerId)\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false,\r\n            error: false  \r\n        })\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        this.onCharLoading();\r\n        this.marvelService\r\n            .getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { char, loading, error } = this.state;\r\n        const errorMessage = error ? <ErrorMessage /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n        return (\r\n\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br />\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button onClick={this.updateChar} className=\"button button__main\">\r\n                        <div className=\"inner\">try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({ char }) => {\r\n    const { name, description, homepage, wiki, thumbnail } = char;\r\n    let imgStyle = { 'objectFit': 'cover' };\r\n    if (thumbnail==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle} />\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">{description}</p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport MarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport Spinner from \"../spinner/spinner\";\r\nimport './charList.scss';\r\n\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        charList: [],\r\n        loading: true,\r\n        error: false,\r\n        newItemLoading: false,\r\n        offset: 210,\r\n        charEnded: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.onRequest();\r\n    }\r\n    onRequest = (offset) => {\r\n        this.onCharListLoading();\r\n        this.marvelService.getAllCharacters(offset)\r\n            .then(this.onCharListLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({\r\n            newItemLoading: true\r\n        })\r\n    }\r\n\r\n    onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        this.setState(({ offset, charList }) => ({\r\n            charList: [...charList, ...newCharList],\r\n            loading: false,\r\n            newItemLoading: false,\r\n            offset: offset + 9,\r\n            charEnded: ended\r\n        }))\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    itemRefs = [];\r\n\r\n    setRef = (ref) => {\r\n        this.itemRefs.push(ref);\r\n    }\r\n\r\n    focusOnItem = (id) => {\r\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\r\n        this.itemRefs[id].classList.add('char__item_selected');\r\n        this.itemRefs[id].focus();\r\n    }\r\n\r\n    renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = { 'objectFit': 'cover' };\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = { 'objectFit': 'unset' };\r\n            }\r\n\r\n            return (\r\n                <li\r\n                    className=\"char__item\"\r\n                    tabIndex={0}\r\n                    ref={this.setRef}\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                        this.props.onCharSelected(item.id);\r\n                        this.focusOnItem(i);\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === ' ' || e.key === \"Enter\") {\r\n                            this.props.onCharSelected(item.id);\r\n                            this.focusOnItem(i);\r\n                        }\r\n                    }}>\r\n\r\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        // For centr spinner\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const { charList, loading, error, offset, newItemLoading, charEnded } = this.state;\r\n\r\n        const items = this.renderItems(charList);\r\n\r\n        const errorMessage = error ? <ErrorMessage /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = !(loading || error) ? items : null;\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <button\r\n                    className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\r\n                    onClick={() => this.onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\nexport default CharList;","import React from \"react\";\r\nimport './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\nimport MarvelService from \"../../services/MarvelService\";\r\n\r\nimport './charInfo.scss';\r\n\r\nclass CharInfo extends Component {\r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false\r\n    }\r\n  \r\n    marvelService = new MarvelService();\r\n \r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n     \r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChar();\r\n        }     \r\n    }\r\n\r\n    updateChar = () => {\r\n        const { charId } = this.props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n       \r\n        this.onCharLoading();\r\n\r\n        this.marvelService\r\n            .getCharacter(charId)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError)\r\n               \r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { char, loading, error } = this.state;\r\n\r\n        const skeleton = char || loading || error ? null : <Skeleton/>;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const { name, decoration, thumbnail, homepage, wiki, comics } = char;\r\n\r\n    let imgStyle = {'objectFit': 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit': 'contain'};\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle} />\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {decoration}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There no comis with this character'}\r\n                {       comics.map((item, i) => {\r\n                       \r\n                        return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nCharInfo.propTypes={ \r\n    charId: PropTypes.number\r\n}\r\nexport default CharInfo;","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorinfo) {\r\n        console.log(error, errorinfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default ErrorBoundary;","import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../erroeBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        selectedChar: null\r\n    }\r\n\r\n    onCharSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader />\r\n                <main>\r\n                    <ErrorBoundary>\r\n                        <RandomChar />\r\n                    </ErrorBoundary>\r\n                    <div className=\"char__content\">\r\n                        <CharList onCharSelected={this.onCharSelected} />\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId={this.state.selectedChar} />\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}